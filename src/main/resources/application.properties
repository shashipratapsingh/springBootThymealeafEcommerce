spring.application.name=com.ecommerce
spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.datasource.platform=mysql
spring.jpa.hibernate.ddl-auto=update
spring.main.allow-circular-references=true
#logging.level.org.hibernate=DEBUG
#logging.level.org.springframework=DEBUG
spring.datasource.initialization-mode=always
# JWT Configuration
#jwt.secret=yourSecretKey
#jwt.expiration=86400  # 24 hours in seconds
# Spring Security Configuration
#spring.security.user.name=admin
#spring.security.user.password=admin
spring.security.debug=true
logging.level.org.springframework.security=DEBUG

server.port=8080

#Oauth2 configure
#spring.security.oauth2.client.registration.google.client-id= 
#spring.security.oauth2.client.registration.google.client-secret= 

#paytm
# paytm.payment.sandbox.merchantId:
# paytm.payment.sandbox.merchantKey: 
# paytm.payment.sandbox.channelId:WEB
# paytm.payment.sandbox.industryTypeId:Retail
# paytm.payment.sandbox.website:WEBSTAGING
# paytm.payment.sandbox.paytmUrl:https://securegw-stage.paytm.in/order/process
# paytm.payment.sandbox.callbackUrl:http://localhost:8080/pgresponse
# paytm.payment.sandbox.details.MID: ${paytm.payment.sandbox.merchantId}
# paytm.payment.sandbox.details.CHANNEL_ID: ${paytm.payment.sandbox.channelId}
# paytm.payment.sandbox.details.INDUSTRY_TYPE_ID: ${paytm.payment.sandbox.industryTypeId}
# paytm.payment.sandbox.details.WEBSITE: ${paytm.payment.sandbox.website}
# paytm.payment.sandbox.details.CALLBACK_URL: ${paytm.payment.sandbox.callbackUrl}
# paytm.mobile = 
# paytm.email = 